[h][5.1]    DOWNLOAD AND INSTALL[/h]

[b]First off: [url=https://dl.dropboxusercontent.com/u/14504410/Keyboards/dreymar/usb/Hasu-tmk-usb2usb-DreymaR.zip]Here are my TMK-based files[/url][/b]! There's:
• An [b]usb_usb[/b] dir with files that go into the tmk_keyboard/converter/usb_usb dir of [url=https://github.com/tmk/tmk_keyboard/]Hasu's repo[/url]
• A [b]hex-precompiled[/b] dir with some ready-made HEX files that you can flash directly onto a Hasu device (or any other ATmega32U4 chip)

In addition to providing my additional files for use with [url=https://github.com/tmk/tmk_keyboard/tree/master/converter/usb_usb/]Hasu's TMK code for his USB to USB converter[/url], this post shows how to prepare your device and get ready to make and flash (install) a HEX file to it. If you have another device or just wish to learn more, I recommend looking at the [url=https://github.com/tmk/tmk_keyboard/blob/master/tmk_core/doc/build.md]TMK help files[/url] and [url=https://github.com/njbair/keyboard_firmware#building--flashing-the-firmware]NJBair's instructive firmware building/flashing guide[/url].

The [b][url=https://forum.colemak.com/post/18410/#p18410]Keymap Configuration[/url][/b] post below will show you how to get or generate a keymap/layout that suits you, and the [b][url=https://forum.colemak.com/post/18411/#p18411]Device Flashing[/url][/b] post shows how to program a USB2USB device with that file.


[b][i]Device preparation:[/i][/b]

[b]1.[/b] [b]For flashing on Windows: [url=http://www.atmel.com/tools/FLIP.aspx]Install Atmel's FLIP application[/url][/b] for device drivers ++
        • Note that it says 'Buy now' on a button but the links below don't cost anything!
[b]2.[/b] [b]Insert the device and press its Bootloader mode button (fig. 1–4)[/b].
        • You don't need a keyboard plugged into the device yet, but it shouldn't hurt either.
        • When in Application/Keyboard mode, the yellow App LED is lit; when in Bootloader/Flash mode it goes out.
        • If you're using a virtual machine, make sure the device is captured in Bootloader mode (see the [url=https://forum.colemak.com/post/18411/#p18411]Device Flashing[/url] section)

    [img]https://dl.dropboxusercontent.com/u/14504410/Keyboards/dreymar/usb/doc/USB2USB_Hasu-physical.png[/img]
    [i]Fig. 1: Hasu's USB-2-USB device. 1) USB host – plug keyboard here; 2) USB client – plug into computer or whatever; 3) App LED; 4) Bootloader button[/i]

[b]3.[/b] For flashing on Windows: [b]Install/update the device drivers for your ATmega32U4 (or other) chip[/b].
        • The Windows Device Manager shows your device first as a HID keyboard and then, in Bootloader mode, as an Atmel or ATMega USB device
        • Point the driver update to the [b]C:\Program Files (x86)\Atmel\Flip 3.4.7\usb[/b] or similar directory if necessary

    [img]https://dl.dropboxusercontent.com/u/14504410/Keyboards/dreymar/usb/doc/USB2USB_WinDevMgr_Hasu-ApplicationVsBootloaderMode.png[/img]
    [i]Fig. 2: Windows Device Manager showing the Hasu USB-2-USB device in Application/Keyboard (left) and Bootloader (right) mode.[/i]


[b][i]Getting and installing my TMK files, TMK itself and AVR tools for Linux:[/i][/b]

My files are extensions of Hasu's TMK code. You'll need to compile these within a copy of his repo, and I'll describe how to do this on a Linux machine. Use a real or virtual Linux machine (I've used an Ubuntu VM). It should be possible to do this in Windows, using for instance CygWin, MinGW or the upcoming [url=http://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/]Linux BASH on Windows (beta)[/url], but I haven't tried any of those possibilities. Hasu has [url=https://github.com/tmk/tmk_keyboard/wiki/Bash-On-Ubuntu-On-Windows10]some experience with using BASH on Windows 10[/url].

Included in my files is the shell script [i][b]makeflash_usb2usb.sh[/b][/i] that does several things on a Linux machine. Run it with the -h option for more help:
    [img]https://dl.dropboxusercontent.com/u/14504410/Keyboards/dreymar/usb/doc/USB2USB_Linux-MakeFlash-help.png[/img]
    [i]Fig. 3: The help text for my makeflash_usb2usb.sh script, showing options and default values.[/i]


[b][i]Step-by-step instructions:[/i][/b]

Here's a set of [b]step-by-step download/install instructions[/b]. Skip step 2) if you already have Hasu's TMK.
[b]1)[/b] [b][url=https://dl.dropboxusercontent.com/u/14504410/Keyboards/dreymar/usb/Hasu-tmk-usb2usb-DreymaR.zip]Download my files[/url][/b] and put at least the [b]makeflash_usb2usb.sh[/b] script in the directory in which you want TMK
        (I use a VM shared folder so both Linux and Windows can see the HEX files I've built directly)
[b]2)[/b] [b]Install Git[/b] and [b]Hasu's GitHub TMK repository[/b] with [i][b]bash makeflash_usb2usb.sh -g[/b][/i] (it won't matter if you have Git already)
[b]3)[/b] [b]Install the AVR Tools[/b] needed for compiling for and flashing to the chip with [i][b]bash makeflash_usb2usb.sh -i[/b][/i]
[b]4)[/b] [b]Move all files from my usb_usb directory[/b] into your [b]tmk_keyboard/converter/usb_usb[/b] directory, and open your terminal there
[b]5)[/b] Now you're ready to [b]Build and flash HEX files[/b] from TMK code. To simply build the default keymap as set in keymap_dreymar.c, use:
[code]
$> ./makeflash_usb2usb.sh
[/code]

See the [b][url=https://forum.colemak.com/post/18410/#p18410]Keymap Configuration[/url][/b] post below for more info on getting a HEX file that suits you, and the [b][url=https://forum.colemak.com/post/18411/#p18411]Device Flashing[/url][/b] post for how to program your device with the HEX file.